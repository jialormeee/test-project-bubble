{"remainingRequest":"/Users/jialormeee/test-project-bubble/node_modules/babel-loader/lib/index.js!/Users/jialormeee/test-project-bubble/node_modules/eslint-loader/index.js??ref--13-0!/Users/jialormeee/test-project-bubble/src/components/BubbleChart.js","dependencies":[{"path":"/Users/jialormeee/test-project-bubble/src/components/BubbleChart.js","mtime":1584797789848},{"path":"/Users/jialormeee/test-project-bubble/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jialormeee/test-project-bubble/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jialormeee/test-project-bubble/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IHsgQnViYmxlIH0gZnJvbSAndnVlLWNoYXJ0anMnOwppbXBvcnQgZGF0YWJhc2UgZnJvbSAnLi9maXJlYmFzZS5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBleHRlbmRzOiBCdWJibGUsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFjb2xsZWN0aW9uOiB7CiAgICAgICAgZGF0YXNldHM6IFtdCiAgICAgIH0sCiAgICAgIG9wdGlvbnM6IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgZGlzcGxheTogdHJ1ZSwKICAgICAgICAgIHRleHQ6ICdHRFAsIGhhcHBpbmVzcyBhbmQgcG9wdWxhdGlvbicKICAgICAgICB9LAogICAgICAgIHNjYWxlczogewogICAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICAgIHNjYWxlTGFiZWw6IHsKICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgICAgIGxhYmVsU3RyaW5nOiAiSGFwcGluZXNzIgogICAgICAgICAgICB9CiAgICAgICAgICB9XSwKICAgICAgICAgIHhBeGVzOiBbewogICAgICAgICAgICBzY2FsZUxhYmVsOiB7CiAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSwKICAgICAgICAgICAgICBsYWJlbFN0cmluZzogIkdEUCAoUFBQKSIKICAgICAgICAgICAgfQogICAgICAgICAgfV0KICAgICAgICB9LAogICAgICAgIHJlc3BvbnNpdmU6IHRydWUsCiAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoSXRlbXM6IGZ1bmN0aW9uIGZldGNoSXRlbXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBkYXRhYmFzZS5jb2xsZWN0aW9uKCdjb3VudHJpZXMnKS5nZXQoKS50aGVuKGZ1bmN0aW9uIChxdWVyeVNuYXBTaG90KSB7CiAgICAgICAgcXVlcnlTbmFwU2hvdC5mb3JFYWNoKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgIF90aGlzLmRhdGFjb2xsZWN0aW9uLmRhdGFzZXRzLnB1c2goewogICAgICAgICAgICBsYWJlbDogZG9jLmRhdGEoKS5MYWJlbCwKICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBkb2MuZGF0YSgpLmJhY2tncm91bmRDb2xvciwKICAgICAgICAgICAgYm9yZGVyQ29sb3I6IGRvYy5kYXRhKCkuYm9yZGVyQ29sb3IsCiAgICAgICAgICAgIGRhdGE6IFt7CiAgICAgICAgICAgICAgeDogZG9jLmRhdGEoKS5HRFAsCiAgICAgICAgICAgICAgeTogZG9jLmRhdGEoKS5IYXBwaW5lc3MsCiAgICAgICAgICAgICAgcjogZG9jLmRhdGEoKS5TaXplCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMucmVuZGVyQ2hhcnQoX3RoaXMuZGF0YWNvbGxlY3Rpb24sIF90aGlzLm9wdGlvbnMpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoSXRlbXM7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5yZW5kZXJDaGFydCh0aGlzLmRhdGFjb2xsZWN0aW9uLCB0aGlzLm9wdGlvbnMpOwogIH0KfTs="},{"version":3,"sources":["/Users/jialormeee/test-project-bubble/src/components/BubbleChart.js"],"names":["Bubble","database","extends","data","datacollection","datasets","options","title","display","text","scales","yAxes","scaleLabel","labelString","xAxes","responsive","maintainAspectRatio","methods","fetchItems","collection","get","then","querySnapShot","forEach","doc","push","label","Label","backgroundColor","borderColor","x","GDP","y","Happiness","r","Size","renderChart","created","mounted"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAEF,MADI;AAEbG,EAAAA,IAAI,EAAE,gBAAY;AAChB,WAAO;AACHC,MAAAA,cAAc,EAAE;AACZC,QAAAA,QAAQ,EAAE;AADE,OADb;AAIHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,IAAI,EAAE;AAFD,SADF;AAKLC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC;AACNC,YAAAA,UAAU,EAAE;AACVJ,cAAAA,OAAO,EAAE,IADC;AAEVK,cAAAA,WAAW,EAAE;AAFH;AADN,WAAD,CADD;AAONC,UAAAA,KAAK,EAAE,CAAC;AACNF,YAAAA,UAAU,EAAE;AACVJ,cAAAA,OAAO,EAAE,IADC;AAEVK,cAAAA,WAAW,EAAE;AAFH;AADN,WAAD;AAPD,SALH;AAmBLE,QAAAA,UAAU,EAAE,IAnBP;AAoBLC,QAAAA,mBAAmB,EAAE;AApBhB;AAJN,KAAP;AA2BD,GA9BY;AAgCbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,sBAAY;AAAA;;AACtBjB,MAAAA,QAAQ,CAACkB,UAAT,CAAoB,WAApB,EAAiCC,GAAjC,GAAuCC,IAAvC,CAA4C,UAAAC,aAAa,EAAI;AAC3DA,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AACzB,UAAA,KAAI,CAACpB,cAAL,CAAoBC,QAApB,CAA6BoB,IAA7B,CACE;AACEC,YAAAA,KAAK,EAACF,GAAG,CAACrB,IAAJ,GAAWwB,KADnB;AAEEC,YAAAA,eAAe,EAAEJ,GAAG,CAACrB,IAAJ,GAAWyB,eAF9B;AAGEC,YAAAA,WAAW,EAAEL,GAAG,CAACrB,IAAJ,GAAW0B,WAH1B;AAIE1B,YAAAA,IAAI,EAAC,CAAC;AAAC2B,cAAAA,CAAC,EAACN,GAAG,CAACrB,IAAJ,GAAW4B,GAAd;AAAmBC,cAAAA,CAAC,EAACR,GAAG,CAACrB,IAAJ,GAAW8B,SAAhC;AAA0CC,cAAAA,CAAC,EAACV,GAAG,CAACrB,IAAJ,GAAWgC;AAAvD,aAAD;AAJP,WADF;AAOH,SARD;;AASA,QAAA,KAAI,CAACC,WAAL,CAAiB,KAAI,CAAChC,cAAtB,EAAsC,KAAI,CAACE,OAA3C;AACD,OAXD;AAYD;AAdM,GAhCI;AAgDb+B,EAAAA,OAhDa,qBAgDF;AACT,SAAKnB,UAAL;AACD,GAlDY;AAoDboB,EAAAA,OApDa,qBAoDF;AACT,SAAKF,WAAL,CAAiB,KAAKhC,cAAtB,EAAsC,KAAKE,OAA3C;AACD;AAtDY,CAAf","sourcesContent":["import { Bubble } from 'vue-chartjs'\nimport database from './firebase.js'\n\nexport default {\n  extends: Bubble,\n  data: function () {\n    return {\n        datacollection: {\n            datasets: []\n          },\n        options: {\n            title: {\n              display: true,\n              text: 'GDP, happiness and population'\n            }, \n            scales: {\n              yAxes: [{ \n                scaleLabel: {\n                  display: true,\n                  labelString: \"Happiness\"\n                }\n              }],\n              xAxes: [{ \n                scaleLabel: {\n                  display: true,\n                  labelString: \"GDP (PPP)\"\n                }\n              }]\n            },\n            responsive: true,\n            maintainAspectRatio: false\n        }\n    }\n  },\n\n  methods: {\n    fetchItems: function () {\n      database.collection('countries').get().then(querySnapShot => {\n        querySnapShot.forEach(doc => { \n            this.datacollection.datasets.push(\n              {\n                label:doc.data().Label,\n                backgroundColor: doc.data().backgroundColor,\n                borderColor: doc.data().borderColor,\n                data:[{x:doc.data().GDP, y:doc.data().Happiness,r:doc.data().Size}]\n            })\n        })\n        this.renderChart(this.datacollection, this.options)\n      })\n    }\n  },\n  created () {\n    this.fetchItems\n  },\n\n  mounted () {\n    this.renderChart(this.datacollection, this.options)\n  }\n}"]}]}